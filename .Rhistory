size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
theme_void()
df
dt
dt3
df
dt3
df2 <- df %>%
mutate(csum = rev(cumsum(rev(value))),
pos = value/2 + lead(csum, 1),
pos = if_else(is.na(pos), value/2, pos))
dt3 %>%
mutate(csum = rev(cumsum(rev(pt))),
pos = pt/2 + lead(csum, 1),
pos = if_else(is.na(pos), pt/2, pos))
dt3 <- dt3 %>%
mutate(csum = rev(cumsum(rev(pt))),
pos = pt/2 + lead(csum, 1),
pos = if_else(is.na(pos), pt/2, pos))
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(pt, "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_void()
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(pt, "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_void()
dt3
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_void()
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_void()
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_void()
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_manual(palette = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_void()
myPalette
brewer
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_void()
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 'white') +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 'white') +
coord_polar(theta = "y") +
scale_fill_manual('Tipo de ocupação', values = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
#todas
dt3 <- dt[1:8,] %>%
pivot_longer(cols = c('count', 'area')) %>%
as_tibble() %>%
mutate(tipo = tipo_irregularidade,
value = ifelse(name == 'count',value/1000,value/1000000)) %>%
group_by(tipo, name) %>%
summarise(total =sum(value)) %>%
group_by(name) %>%
mutate(t = sum(total),
pt = total/t) %>%
filter(tipo != 'OSII')
dt3 <- dt3 %>%
mutate(csum = rev(cumsum(rev(pt))),
pos = pt/2 + lead(csum, 1),
pos = if_else(is.na(pos), pt/2, pos))
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 'white') +
coord_polar(theta = "y") +
scale_fill_manual('Tipo de ocupação', values = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
dt3
#todas
dt3 <- dt[1:8,] %>%
filter(tipo != 'OSII')
dt[1:8,]
dt[1:8,] %>%
filter(tipo_irregularidade != 'OSII')
dt[1:8,] %>%
filter(tipo_irregularidade != 'OSII') %>%
pivot_longer(cols = c('count', 'area'))
#todas
dt3 <- dt[1:8,] %>%
filter(tipo_irregularidade != 'OSII') %>%
pivot_longer(cols = c('count', 'area')) %>%
as_tibble() %>%
mutate(tipo = tipo_irregularidade,
value = ifelse(name == 'count',value/1000,value/1000000)) %>%
group_by(tipo, name) %>%
summarise(total =sum(value)) %>%
group_by(name) %>%
mutate(t = sum(total),
pt = total/t) %>%
dt3 <- dt3 %>%
mutate(csum = rev(cumsum(rev(pt))),
pos = pt/2 + lead(csum, 1),
pos = if_else(is.na(pos), pt/2, pos))
#todas
dt3 <- dt[1:8,] %>%
filter(tipo_irregularidade != 'OSII') %>%
pivot_longer(cols = c('count', 'area')) %>%
as_tibble() %>%
mutate(tipo = tipo_irregularidade,
value = ifelse(name == 'count',value/1000,value/1000000)) %>%
group_by(tipo, name) %>%
summarise(total =sum(value)) %>%
group_by(name) %>%
mutate(t = sum(total),
pt = total/t)
#todas
dt3 <- dt[1:8,] %>%
filter(tipo_irregularidade != 'OSII') %>%
pivot_longer(cols = c('count', 'area')) %>%
as_tibble() %>%
mutate(tipo = tipo_irregularidade,
value = ifelse(name == 'count',value/1000,value/1000000)) %>%
group_by(tipo, name) %>%
summarise(total =sum(value)) %>%
group_by(name) %>%
mutate(t = sum(total),
pt = total/t)
dt3 <- dt3 %>%
mutate(csum = rev(cumsum(rev(pt))),
pos = pt/2 + lead(csum, 1),
pos = if_else(is.na(pos), pt/2, pos))
ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 'white') +
coord_polar(theta = "y") +
scale_fill_manual('Tipo de ocupação', values = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
ggsave(filename = '../../imagens/oii/pizza_ocii_todas.png', plot = p1, units = 'in', dpi = 300, scale = 1.5)
p2 <- ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 'white') +
coord_polar(theta = "y") +
scale_fill_manual('Tipo de ocupação', values = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
ggsave(filename = '../../imagens/oii/pizza_ocii_todas.png', plot = p2, units = 'in', dpi = 300, scale = 1.5)
p2 <- ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 'white') +
coord_polar(theta = "y") +
scale_fill_manual('Tipo de ocupação', values = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
ylab('')+xlab('')+
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
ggsave(filename = '../../imagens/oii/pizza_ocii_todas.png', plot = p2, units = 'in', dpi = 300, scale = 1.5)
#todas
dt3 <- dt[1:8,] %>%
filter(tipo_irregularidade != 'OSII') %>%
pivot_longer(cols = c('count', 'area')) %>%
as_tibble() %>%
mutate(tipo = tipo_irregularidade,
value = ifelse(name == 'count',value/1000,value/1000000)) %>%
group_by(tipo, name) %>%
summarise(total =sum(value)) %>%
group_by(name) %>%
mutate(t = sum(total),
pt = total/t)
dt3
dt3
dt3 <- dt3 %>%
mutate(csum = rev(cumsum(rev(pt))),
pos = pt/2 + lead(csum, 1),
pos = if_else(is.na(pos), pt/2, pos))
dt3
dt3
dt3 <- dt3 %>%
group_by(name) %>%
mutate(csum = rev(cumsum(rev(pt))),
pos = pt/2 + lead(csum, 1),
pos = if_else(is.na(pos), pt/2, pos))
dt3
p2 <- ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 'white') +
coord_polar(theta = "y") +
scale_fill_manual('Tipo de ocupação', values = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
ylab('')+xlab('')+
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
#todas
dt3 <- dt[1:8,] %>%
filter(tipo_irregularidade != 'OSII') %>%
pivot_longer(cols = c('count', 'area')) %>%
as_tibble() %>%
mutate(tipo = tipo_irregularidade,
value = ifelse(name == 'count',value/1000,value/1000000)) %>%
group_by(tipo, name) %>%
summarise(total =sum(value)) %>%
group_by(name) %>%
mutate(t = sum(total),
pt = total/t)
dt3
dt3 <- dt3 %>%
group_by(name) %>%
mutate(csum = rev(cumsum(rev(pt))),
pos = pt/2 + lead(csum, 1),
pos = if_else(is.na(pos), pt/2, pos))
dt3
p2 <- ggplot(dt3, aes(x = "" , y = pt, fill = fct_inorder(tipo))) +
geom_col(width = 1, color = 'white') +
coord_polar(theta = "y") +
scale_fill_manual('Tipo de ocupação', values = myPalette) +
geom_label_repel(data = dt3,
aes(y = pos, label = paste0(round(pt*100,2), "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Group")) +
ylab('')+xlab('')+
facet_wrap(~name, labeller = as_labeller(c('count' = 'Número (mil ocupações)', 'area'= 'Área (Mha)')))+
theme_bw()
output <- vector('list', bss$n)
bss$n
rm(list=ls())
options(scipen = 999)
options(stringsAsFactors = F)
# installing packages
library(pacman)
p_load( raster, rgdal,   dplyr, doMPI, snow,  RPostgreSQL)
#setwd('/home/pedro_alves_coutinho_usp_br/malha-fundiaria/procs_area')
#source('funcoes.R')
source('/home/pedro_alves_coutinho_usp_br/malha-fundiaria/procs_area/funcoes.R')
rm(list=ls())
options(scipen = 999)
options(stringsAsFactors = F)
# installing packages
library(pacman)
p_load( raster, rgdal,   dplyr, doMPI, snow,  RPostgreSQL)
#setwd('/home/pedro_alves_coutinho_usp_br/malha-fundiaria/procs_area')
#source('funcoes.R')
source('/home/pedro_alves_coutinho_usp_br/malha-fundiaria/procs_area/funcoes.R')
#setwd('/home/pedro_alves_coutinho_usp_br/malha-fundiaria/procs_area')
#source('funcoes.R')
source('../malha-fundiaria/procs_area/funcoes.R')
start <- Sys.time()
tryCatch({
drv <- dbDriver("PostgreSQL")
print("Connecting to Database…")
connec <- dbConnect(drv,
dbname = 'malha_fundiaria',
host = 'localhost',
port = '5433',
user = 'postgres',
password = 'gpp-es@lq')
print("Database Connected!")
},
error=function(cond) {
print("Unable to connect to Database.")
})
#dados
desmatamento <- raster('/home/pedro_alves_coutinho_usp_br/arquivos/dados_espaciais/uso_solo/desmatamento/PRODES/pa_br_desmatamento_PRODES_30m_2000-2021.tif')
#dados
desmatamento <- raster('../../outputs/geotiffs/pa_br_desmatamento_GPP_30m_1988-2021.tif')
car <- raster('../../outputs/car/proc2_array_agg.tif')
cat_fund <- raster('../../outputs/geotiffs/step14_overlay.tif')
desmatamento
car
#dados
desmatamento <- raster('../../outputs/geotiffs/pa_br_desmatamento_GPP_30m_1988-2021.tif')
car <- raster('../../outputs/car/proc2_array_agg.tif')
NAvalue(car) <- 0
cat_fund <- raster('../../outputs/geotiffs/step14_overlay.tif')
NAvalue(cat_fund) <- 0
#id_cat_fund <- dbGetQuery(connec, "select * from layer_fundiario.step15_id_label")
bss <- blockSize(desmatamento, minrows = 100) ; bss
output <- vector('list', bss$n)
#Cluster start
cl <- snow::makeSOCKcluster(8, outfile="")
registerDoMPI(cl)
#Load libraries
snow::clusterEvalQ(cl, library(raster))
snow::clusterEvalQ(cl, library(dplyr))
#Load libraries
snow::clusterEvalQ(cl, library(raster))
snow::clusterEvalQ(cl, library(dplyr))
snow::clusterExport(cl=cl,
ls())
ls()
print(paste0('Elapsed time: ', Sys.time()-start))
list(data.frame(a = 1, b = 2))
x <- list(data.frame(a = 1, b = 2))
View(x)
x[[1]]
x[[1]]
y <- x[[1]]
rm(list=ls())
options(scipen = 999)
options(stringsAsFactors = F)
# installing packages
library(pacman)
p_load( raster, rgdal,   dplyr, doMPI, snow,  RPostgreSQL)
#setwd('/home/pedro_alves_coutinho_usp_br/malha-fundiaria/procs_area')
#source('funcoes.R')
source('../malha-fundiaria/procs_area/funcoes.R')
start <- Sys.time()
tryCatch({
drv <- dbDriver("PostgreSQL")
print("Connecting to Database…")
connec <- dbConnect(drv,
dbname = 'malha_fundiaria',
host = 'localhost',
port = '5433',
user = 'postgres',
password = 'gpp-es@lq')
print("Database Connected!")
},
error=function(cond) {
print("Unable to connect to Database.")
})
#dados
desmatamento <- raster('../../outputs/geotiffs/pa_br_desmatamento_GPP_30m_1988-2021.tif')
car <- raster('../../outputs/car/proc2_array_agg.tif')
NAvalue(car) <- 0
cat_fund <- raster('../../outputs/geotiffs/step14_overlay.tif')
NAvalue(cat_fund) <- 0
#id_cat_fund <- dbGetQuery(connec, "select * from layer_fundiario.step15_id_label")
bss <- blockSize(desmatamento, minrows = 100) ; bss
output <- vector('list', bss$n)
#Cluster start
cl <- snow::makeSOCKcluster(4, outfile="")
registerDoMPI(cl)
#Load libraries
snow::clusterEvalQ(cl, library(raster))
snow::clusterEvalQ(cl, library(dplyr))
snow::clusterExport(cl=cl,
ls())
snow::stopCluster(cl)
rm(list=ls())
options(scipen = 999)
options(stringsAsFactors = F)
# installing packages
library(pacman)
p_load( raster, rgdal,   dplyr, doMPI, snow,  RPostgreSQL)
#setwd('/home/pedro_alves_coutinho_usp_br/malha-fundiaria/procs_area')
#source('funcoes.R')
source('../malha-fundiaria/procs_area/funcoes.R')
start <- Sys.time()
tryCatch({
drv <- dbDriver("PostgreSQL")
print("Connecting to Database…")
connec <- dbConnect(drv,
dbname = 'malha_fundiaria',
host = 'localhost',
port = '5433',
user = 'postgres',
password = 'gpp-es@lq')
print("Database Connected!")
},
error=function(cond) {
print("Unable to connect to Database.")
})
#dados
desmatamento <- raster('../../outputs/geotiffs/pa_br_desmatamento_GPP_30m_1988-2021.tif')
car <- raster('../../outputs/car/proc2_array_agg.tif')
NAvalue(car) <- 0
cat_fund <- raster('../../outputs/geotiffs/step14_overlay.tif')
NAvalue(cat_fund) <- 0
#id_cat_fund <- dbGetQuery(connec, "select * from layer_fundiario.step15_id_label")
bss <- blockSize(desmatamento, minrows = 100) ; bss
output <- vector('list', bss$n)
#Cluster start
cl <- snow::makeSOCKcluster(4, outfile="")
registerDoMPI(cl)
#Load libraries
snow::clusterEvalQ(cl, library(raster))
snow::clusterEvalQ(cl, library(dplyr))
snow::clusterExport(cl=cl,
ls())
atualiza_dt()
snow::stopCluster(cl)
rm(list=ls())
options(scipen = 999)
options(stringsAsFactors = F)
# installing packages
library(pacman)
p_load( raster, rgdal,   dplyr, doMPI, snow,  RPostgreSQL)
#setwd('/home/pedro_alves_coutinho_usp_br/malha-fundiaria/procs_area')
#source('funcoes.R')
source('../malha-fundiaria/procs_area/funcoes.R')
start <- Sys.time()
tryCatch({
drv <- dbDriver("PostgreSQL")
print("Connecting to Database…")
connec <- dbConnect(drv,
dbname = 'malha_fundiaria',
host = 'localhost',
port = '5433',
user = 'postgres',
password = 'gpp-es@lq')
print("Database Connected!")
},
error=function(cond) {
print("Unable to connect to Database.")
})
#dados
desmatamento <- raster('../../outputs/geotiffs/pa_br_desmatamento_GPP_30m_1988-2021.tif')
car <- raster('../../outputs/car/proc2_array_agg.tif')
NAvalue(car) <- 0
cat_fund <- raster('../../outputs/geotiffs/step14_overlay.tif')
NAvalue(cat_fund) <- 0
#id_cat_fund <- dbGetQuery(connec, "select * from layer_fundiario.step15_id_label")
bss <- blockSize(desmatamento, minrows = 100) ; bss
output <- vector('list', bss$n)
#Cluster start
cl <- snow::makeSOCKcluster(4, outfile="")
registerDoMPI(cl)
#Load libraries
snow::clusterEvalQ(cl, library(raster))
snow::clusterEvalQ(cl, library(dplyr))
snow::clusterExport(cl=cl,
ls())
atualiza_dt()
View(output)
output[[1]]
View(output[[12]])
output[[33]]
output[[30]]
output <- vector('list', bss$n)
View(output)
